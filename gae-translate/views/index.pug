html
  head
    title=title
    style.
      textarea {
        width: 400;
        height: 300;
        font-size: 20px;
      }
      #error-message {
        font-size: 20px;
        color: red;
      }
  body
    table
      td
        select(id='from-language')
        br
        textarea(id='untranslated-text')
      td
        select(id='to-language')
        br
        textarea(id='translated-text')
    button(id='translate-button')='Translate'
    p(id='error-message')

    // Include axios, which makes http requests easy
    script(src='https://cdnjs.cloudflare.com/ajax/libs/axios/0.17.1/axios.min.js')
    script.
      let languages = new Map();

      // Define what we want to do when we click the 'Translate' button
      async function makeTranslationRequest() {
        // The object we want to send to the server.
        const text = document.getElementById('untranslated-text').value;
        if (!text) {
          // No text yet, don't make the request
          document.getElementById('error-message').innerHTML = 'Enter text';
          return;
        }
        
        const from = document.getElementById('from-language').value;
        const to = document.getElementById('to-language').value;

        const requestPath = `/translate?text=${escape(text)}&from=${from}&to=${to}`;

        // Request translation from the server.
        try {
          const serverResponse = await axios.get(requestPath);
          // Populate the 'translated-text' box with the response.
          document.getElementById('translated-text').value = serverResponse.data;
          // Clear the error message
          document.getElementById('error-message').innerHTML = '';
        } catch (err) {
          document.getElementById('error-message').innerHTML = err;
        }
      }
      
      async function makeListLanguagesRequest() {
        try {
          const serverResponse = await axios.get('/list-languages');
          const fetchedLanguages = serverResponse.data;
          for (let i = 0; i < fetchedLanguages.length; i++) {
            languages.set(fetchedLanguages[i].name, fetchedLanguages[i].code);
            for (const dropdown of ['from-language', 'to-language']) {
              const newElement = document.createElement('option');
              newElement.value = fetchedLanguages[i].code;
              newElement.innerHTML = fetchedLanguages[i].name;
              if (fetchedLanguages[i].name === 'English') {
                newElement.selected = 'selected';
              }
              document.getElementById(dropdown).appendChild(newElement);
            }
          }
        } catch (err) {
          document.getElementById('error-message').innerHTML = err;
        }
      }
      
      makeListLanguagesRequest().then(() => {
        const translateButton = document.getElementById('translate-button');
        translateButton.addEventListener('click', makeTranslationRequest);
      });
